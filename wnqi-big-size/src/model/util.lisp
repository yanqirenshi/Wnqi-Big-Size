(in-package :wbs)

(defun int2timestamp (int)
  (when int
    (mito.dao.column:inflate-for-col-type :datetime int)))

(defgeneric to-datetime (v)
  (:method ((v local-time:timestamp))
    (local-time:format-timestring nil v))
  (:method ((v string))
    v)
  (:method ((v integer))
    (local-time:universal-to-timestamp v)))

(defgeneric by (obj)
  (:method ((obj string))
    obj)
  (:method ((obj integer))
    obj)
  (:method ((obj parson))
    (parson-code obj))
  (:method (obj)
    "???"))

(defun record-2-dao (rec class &rest slot-values)
  (let ((dao (apply #'make-instance class slot-values)))
    (setf (slot-value dao 'mito.dao.mixin::created-at)
          (int2timestamp (getf rec :|created_at|)))
    (setf (slot-value dao 'mito.dao.mixin::updated-at)
          (int2timestamp (getf rec :|updated_at|)))
    dao))

(defun record-2-dao-new (rec class &rest slot-values)
  (let ((dao (apply #'make-instance class slot-values)))
    (setf (slot-value dao 'wbs::created-by)
          (getf rec :|created_by|))
    (setf (slot-value dao 'wbs::created-at)
          (int2timestamp (getf rec :|created_at|)))
    (setf (slot-value dao 'wbs::updated-by)
          (getf rec :|updated_by|))
    (setf (slot-value dao 'wbs::updated-at)
          (int2timestamp (getf rec :|updated_at|)))
    dao))
